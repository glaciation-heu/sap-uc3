services:
  test_database:
    container_name: test_database
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: coord_service
      POSTGRES_PASSWORD: password
      POSTGRES_USER: coord
    networks:
      - default

  test_coordination_service:
    container_name: test_coordination_service
    build: 
      context: ../
      dockerfile: Dockerfile.coordination_service
    restart: on-failure
    ports:
      - "9081:80"
    environment:
      SWAGGER_SERVER_URI: "http://localhost:9081"
      DATABASE_USER: coord
      DATABASE_DBNAME: coord_service
      DATABASE_PASSWD: password
      DATABASE_HOST: test_database
      LOG_LEVEL: debug
    depends_on:
      - test_database
    networks:
      - default

  test_client_service:
    container_name: test_client_service
    build: 
      context: ../
      dockerfile: Dockerfile.client_service
    restart: on-failure
    ports:
      - "9080:80"
    environment:
      SWAGGER_SERVER_URI: "http://localhost:9080"
      COORDINATOR_URI: http://test_coordination_service
      LOG_LEVEL: debug
    networks:
      - default

  csmock:
    container_name: csmock
    platform: linux/amd64
    build: 
      context: ../
      dockerfile: Dockerfile.cs_mock
    environment:
      SWAGGER_SERVER_URI: "http://localhost:${CLIENT_SERVICE_PORT:-8085}"
    ports:
      - "9085:80"
    networks:
      default:
        aliases:
          - ephemeral-generic.default.csmock
          - csmock
  party0:
    container_name: party0
    platform: linux/amd64
    build: 
      context: ../
      dockerfile: Dockerfile.cs_mock
    command: ./execute.sh
    environment:
      PROGRAM: program
      PARTY: 0
      HOST: party0
    networks:
      default:
    volumes:
      - player-data:/root/MP-SPDZ/Player-Data:rw
      - program:/root/MP-SPDZ/Programs/Source:rw

  party1:
    container_name: party1
    platform: linux/amd64
    build: 
      context: ../
      dockerfile: Dockerfile.cs_mock
    command: ./execute.sh
    environment:
      PROGRAM: program
      PARTY: 1
      HOST: party0
    networks:
      default:
    volumes:
      - player-data:/root/MP-SPDZ/Player-Data:rw
      - program:/root/MP-SPDZ/Programs/Source:rw

  test_env:
    build:
      context: .
    environment:
      LOG_LEVEL: debug
      # env for client testing
      COORDINATOR_URI: "http://test_coordination_service:80"
      # env for coordinator tesing
      DATABASE_USER: coord
      DATABASE_DBNAME: coord_service
      DATABASE_PASSWD: password
      DATABASE_HOST: test_database
      # envs for smoketesting
      COORD_SERVICE_URI: http://test_coordination_service
      CLIENT_SERVICE_URI: http://test_client_service
      SMOKETESTING_INSTANCE_URI: http://test_env
    ports:
      - "5000:5000"
    volumes:
      - ../:/application:rw
    networks:
      - default

networks:
  default:

volumes:
  player-data:
  program:
